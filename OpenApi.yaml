#Updated yaml file for openapi 3.0.0

openapi: "3.0.0"
info:
  termsOfService: https://api.mymhealth.com/terms-of-use
  version: 1.0.0
  title: my mhealth OpenAPI
  description: The mymhealth openapi is used for all mymhealth related client-server communications
  contact:
    url: https://mymhealth.com/
    tel: 01202 299 583
    email: info@mymhealth.com
  servers:
    - url: https://api.mymhealth.com

paths:
  /patient:
    post:
      description: creates a new patient account. Duplicates disallowed
      responses:
           '200':
           content:
            application/json:
                        schema:
                          type: string
                          items:
                            $ref: '#/schemas/patients'
    identifier: #"An identifier for this patient."
    active: #"Whether this patient record is in active use."
    name: #"A name associated with the individual."
    telecom: #"A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted."
    gender: #"Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes."
    birthDate: #"The date of birth for the individual."
    deceased:
      deceasedBoolean: #"Indicates if the individual is deceased or not."
      deceasedDateTime: #"Indicates if the individual is deceased or not."
    address: #"An address expressed using postal conventions (as opposed to GPS or other location definition formats)."
    maritalStatus: #"This field contains a patient\u0027s most recent marital (civil) status."
    multipleBirthBoolean:
    multipleBirthInteger:
    photo: #"Image of the patient."
    contact: #"A contact party (e.g. guardian, partner, friend) for the patient."
      relationship:
      name:
      telecom:
      address:
      gender:
      organization:
      period:
    communication: #"Languages which may be used to communicate with the patient about his or her health."
      language:
      prefered:
    generalPractioner: #"Patient\u0027s nominated care provider."
    managingOrganization: #"Organization that is the custodian of the patient record."
    link: #"Link to another patient resource that concerns the same actual patient."
      other:
      type: #"Categorizes the account for reporting and searching purposes."

/organization:
    post:
      description: creates a new organisation account. Duplicates disallowed
      responses:
        '200':
          content:
            application/json:
                        schema:
                          type: string
                          items:
                            $ref: '#/schemas/organisation'
    identifier: #"Identifier for the organization that is used to identify the organization across multiple disparate systems."
    active: #"Whether the organization\u0027s record is still in active use."
    type: #"The kind(s) of organization that this is."
    name: #"A name associated with the organization."
    alias: #"A list ofÂ alternate names that the organization is known as, or was known as in the past."
    telecom: #"A contact detail for the organization."
    address: #"An address for the organization."
    partOf: #"The organization of which this organization forms a part."
    contact: #"Contact for the organization for a certain purpose."
      purpose:
      name:
      telecom:
      address:
    endpoint: #"Technical endpoints providing access to services operated for the organization."

/observation:
    post:
      description: Observations support diagnosis, monitor progress, determine baselines and patterns and capture demographic characteristics
      responses:
        '200':
          content:
            application/json:
                        schema:
                          type: string
                          items:
                            $ref: '#/schemas/observation'
    identifier: #"A unique identifier assigned to this observation."
    basedon: #"A plan, proposal or order that is fulfilled in whole or in part by this event."
    status: #"The status of the result value."
    category: #"A code that classifies the general type of observation being made."
    code: #"Describes what was observed. Sometimes this is called the observation \"name\"."
    subject: #"The patient, or group of patients, location, or device whose characteristics (direct or indirect) are described by the observation and into whose record the observation is placed."
    context: #"The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made."
    effective:
      effectiveDateTime: #"The time or time-period the observed value is asserted as being true."
      effectivePeriod: #"The time or time-period the observed value is asserted as being true."
    issued: #"The date and time this observation was made available to providers, typically after the results have been reviewed and verified."
    performed: #"Who was responsible for asserting the observed value as \"true\"."
    value:
      valueQuantity: #"The information determined as a result of making the observation, if the information has a simple value."
      valueCodeableConcept: #"The information determined as a result of making the observation, if the information has a simple value."
      valueString: #"The information determined as a result of making the observation, if the information has a simple value."
      valueBoolean: #"The information determined as a result of making the observation, if the information has a simple value."
      valueRange: #"The information determined as a result of making the observation, if the information has a simple value."
      valueRatio: #"The information determined as a result of making the observation, if the information has a simple value."
      valueSampledData: #"The information determined as a result of making the observation, if the information has a simple value."
      valueAttachment: #"The information determined as a result of making the observation, if the information has a simple value."
      valueTime: #"The information determined as a result of making the observation, if the information has a simple value."
      valueDateTime: #"The information determined as a result of making the observation, if the information has a simple value."
      valuePeriod: #"The information determined as a result of making the observation, if the information has a simple value."
    dataAbsetReason: #"Provides a reason why the expected value in the element Observation.value[x] is missing."
    interpretation: #"The assessment made based on the result of the observation.  Intended as a simple compact code often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result."
    comment: #"May include statements about significant, unexpected or unreliable values, or information about the source of the value where this may be relevant to the interpretation of the result."
    bodySite: #"Indicates the site on the subject\u0027s body where the observation was made (i.e. the target site)."
    method: #"Indicates the mechanism used to perform the observation."
    specimen: #"The specimen that was used when this observation was made."
    device: #"The device used to generate the observation data."
    referenceRange: #"Guidance on how to interpret the value by comparison to a normal or recommended range."
      low:
      high:
      type:
      appliesTo:
      age:
      text:
    related: #"A  reference to another resource (usually another Observation) whose relationship is defined by the relationship type code."
      type:
      target:
    component: #"Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes."
      code:
      value:
        valueQuantity: #"The information determined as a result of making the observation, if the information has a simple value."
        valueCodeableConcept: #"The information determined as a result of making the observation, if the information has a simple value."
        valueString: #"The information determined as a result of making the observation, if the information has a simple value."
        valueBoolean: #"The information determined as a result of making the observation, if the information has a simple value."
        valueRange: #"The information determined as a result of making the observation, if the information has a simple value."
        valueRatio: #"The information determined as a result of making the observation, if the information has a simple value."
        valueSampledData: #"The information determined as a result of making the observation, if the information has a simple value."
        valueAttachment: #"The information determined as a result of making the observation, if the information has a simple value."
        valueTime: #"The information determined as a result of making the observation, if the information has a simple value."
        valueDateTime: #"The information determined as a result of making the observation, if the information has a simple value."
        valuePeriod: #"The information determined as a result of making the observation, if the information has a simple value."
      dataAbsentReason:
      interpretation:
      referenceRange:

/Location:
    post:
      description: The Location is intended to describe the more physical structures managed/operated by an organisation
      responses:
        '200':
          content:
            application/json:
                        schema:
                          type: string
                          items:
                            $ref: '#/schemas/location'
    identifier: #"Unique code or number identifying the location to its users."
    status: #"The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location."
    operationalStatus: #"The Operational status covers operation values most relevant to beds (but can also apply to rooms/units/chair/etc such as an isolation unit/dialisys chair). This typically covers concepts such as contamination, housekeeping and other activitiesÂ like maintenance."
    name: #"Name of the location as used by humans. Does not need to be unique."
    alias: #"A list ofÂ alternate names that the location is known as, or was known as in the past."
    description: #"Description of the Location, which helps in finding or referencing the place."
    mode: #"Indicates whether a resource instance represents a specific location or a class of locations."
    type: #"Indicates the type of function performed at the location."
    telecom: #"The contact details of communication devices available at the location. This can include phone numbers, fax numbers, mobile numbers, email addresses and web sites."
    address: #"Physical location."
    physicalType: #"Physical form of the location, e.g. building, room, vehicle, road."
    position: #"The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML)."
      longitude:
      latitude:
      altitude:
    managingOrganization: #"The organization responsible for the provisioning and upkeep of the location."
    partOf: #"Another Location which this Location is physically part of."
    endpoint: #"Technical endpoints providing access to services operated for the location."

/carePlan:
    post:
      description: Care Plans are used in many areas of healthcare with a variety of scopes, they can be used to represent both proposed plans as well as active plans.
      responses:
        '200':
          content:
            application/json:
                        schema:
                          type: string
                          items:
                            $ref: '#/schemas/careplan'
    identifier: #"This records identifiers associated with this care plan that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation)."
    definition: #"Identifies the protocol, questionnaire, guideline or other specification the care plan should be conducted in accordance with."
    basedOn: #"A care plan that is fulfilled in whole or in part by this care plan."
    replaces: #"Completed or terminated care plan whose function is taken by this new care plan."
    partOf: #"A larger care plan of which this particular care plan is a component or step."
    status: #"Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record."
    intent: #"Indicates the level of authority/intentionality associated with the care plan and where the care plan fits into the workflow chain."
    category: #"Identifies what \"kind\" of plan this is to support differentiation between multiple co-existing plans; e.g. \"Home health\", \"psychiatric\", \"asthma\", \"disease management\", \"wellness plan\", etc.",
    title: #"Human-friendly name for the CarePlan."
    description: #"Extensions for title"
    subject: #"Identifies the patient or group whose intended care is described by the plan."
    context: #"Identifies the original context in which this particular CarePlan was created."
    period: #"Indicates when the plan did (or is intended to) come into effect and end."
    author: #"Identifies the individual(s) or ogranization who is responsible for the content of the care plan."
    careTeam: #"Identifies all people and organizations who are expected to be involved in the care envisioned by this plan."
    addresses: #"Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan."
    supportingInfo: #"Identifies portions of the patient\u0027s record that specifically influenced the formation of the plan.  These might include co-morbidities, recent procedures, limitations, recent assessments, etc."
    goal: #"Describes the intended objective(s) of carrying out the care plan."
    activity: #"Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc."
      outcomeCodeableConcept:
      outcomeReference:
      progress:
      reference:
      detail:
        category:
        definition:
        code:
        reasonCode:
        reasonReference:
        goal:
        status:
        statusReason:
        prohibited:
        scheduled:
          scheduledTiming:
          scheduledPeriod:
          scheduledString:
        location:
        performer:
        product:
          productCodeableConcept:
          productReference:
        dailyAmount:
        quantitiy:
        description:
    note: #"General notes about the care plan not covered elsewhere."

/auditEvent:
    post:
      description: A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.
      responses:
        '200':
          content:
            application/json:
                        schema:
                          type: string
                          items:
                            $ref: '#/schemas/auditevent'
    type: #"Identifier for a family of the event.  For example, a menu item, program, rule, policy, function code, application name or URL. It identifies the performed function."
    subtype: #"Identifier for the category of event."
    action: #"Indicator for type of action performed during the event that generated the audit."
    recorded: #"The time when the event occurred on the source."
    outcome: #"Indicates whether the event succeeded or failed."
    outcomeDesc: #"A free text description of the outcome of the event."
    purposeOfEvent: #"The purposeOfUse (reason) that was used during the event being recorded."
    agent: #"An actor taking an active role in the event or activity that is logged."
      role: #"The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context."
      reference: #"Direct reference to a resource that identifies the agent."
      userId: #"Unique identifier for the user actively participating in the event."
      altId: #"Alternative agent Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g. single sign-on), if available."
      name: #"Human-meaningful name for the agent."
      requestor: #"Indicator that the user is or is not the requestor, or initiator, for the event being audited."
      location: #"Where the event occurred."
      policy: #"The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used."
      media: #"Type of media involved. Used when the event is about exporting/importing onto media."
      network: #"Logical network location for application activity, if the activity has a network location."
        address: #"Identifier for the network access point of the user device"
        type: #"The type of network access point"
      purposeOfUse: #"The reason (purpose of use), specific to this agent, that was used during the event being recorded."
    source: #"The system that is reporting the event."
      site: #"Logical source location within the enterprise"
      identifier: #"The identity of source detecting the event"
      type: #"The type of source where event originated"
    entity: #"Specific instances of data or objects that have been accessed."
      identifier: #"Identifies a specific instance of the entity. The reference should always be version specific."
      reference: #"Identifies a specific instance of the entity. The reference should be version specific."
      type: #"The type of the object that was involved in this audit event."
      role: #"Code representing the role the entity played in the event being audited."
      lifecycle: #"Identifier for the data life-cycle stage for the entity."
      securityLabel: #"Security labels for the identified entity."
      name: #"A name of the entity in the audit event."
      description: #"Extensions for description"
      query: #"Extensions for query"
      detail: #"Tagged value pairs for conveying additional information about the entity."
        type: #"The type of extra detail provided in the value."
        value: #"The details, base64 encoded. Used to carry bulk information."













#paths:
#  /patients: #https://api.mymhealth.com/patients
#    post:
#      schema:
#         type: string
#         items:
#           $ref: #/patients/schemas/account
#      description: creates a new patient account. Duplicates disallowed
#      operationId: createPatientAccount
#      requestBody:
#        - identifier:
#        - active:
#        - name:
#        - telecom:
#        - gender:
#        - birthDate:
#        - address:
#        - maritalStatus:
#        - multipleBirth:
#        - photo:
#      description: Account to add to the database
#      required: true
#      responses:
#        '200':
#          description: ok response
#        default:
#          description: unexpected error
#          schema:
#             type: string
#             items:
#               $ref: #/components/schemas/error
#    get:
#      description: Returns all accounts from the system that the user has access to
#      operationId: findAccount
#      requestBody:
#        identifier:
#        active:
#        name:
#        telecom:
#        gender:
#        birthDate:
#        address:
#        maritalStatus:
#        multipleBirth:
#        photo:
#        deceased:
#      parameters:
#        - name: tags
#          in: accounts
#          description: tags to filter by
#          required: false
#          style: form
#          schema:
#            type: array
#            items:
#              type: string
#        - name: limit
#          in: accounts
#          description: maximum number of results to return
#          required: false
#          schema:
#            type: integer
#            format: int32
#      responses:
#        '200':
#          description: ok response
#       schema:
#          type: array
#          items:
#            $ref: #/components/schemas/account
#         default:
#          description: unexpected error
#              schema:
#                $ref: #components/schema/error
#  /AccountFinder/{id}:
#    get:
#      description: Returns a account based on a single user key
#      operationId: find account by user key
#      parameters:
#        - name: userkey
#          in: path
#          description: user key of account to fetch
#          required: true
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '200':
#          description: ok response
#              schema:
#                $ref: '/component/schemas/account'
#        default:
#          description: unexpected error
#              schema:
#                $ref: '#components/schema/error'
#    delete:
#      description: deletes a single account based on the user key supplied
#      operationId: deleteAccount
#      parameters:
#        - name: userkey
#          in: path
#          description: userkey of account to delete
#          required: true
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '204':
#          description: account deleted
#        default:
#          description: unexpected error
#              schema:
#                $ref: '#components/schema/error'
#  components:
#    schemas:
#      Account:
#        allOf:
#          - $ref: '#/components/schemas/account'
#          - required:
#            - id
#            properties:
#              id:
#                type: integer
#                format: int64
#      NewAccount:
#        required:
#          - firstname
#          - surname
#          - password
#          - emailAddress
#          - birthDate
#          - nhsNumber
#        properties:
#          name:
#            type: string
#          tag:
#            type: string
#      Error:
#        required:
#          - code
#          - message
#        properties:
#          code:
#            type: integer
#            format: int32
#          message:
#            type: string